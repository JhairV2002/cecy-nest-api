// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Catalogo {
  id                              Int                     @id @default(autoincrement())
  nombre                          String
  descripcion                     String
  estudiantesGenero               Estudiantes[]           @relation(name: "catalogo_genero")
  estudiantesTipoEstudiante       Estudiantes[]           @relation(name: "catalogo_tipo_estudiante")
  estudianteEtnia                 Estudiantes[]           @relation(name: "catalogo_etnia")
  estudianteNivelInstruccion      Estudiantes[]           @relation(name: "catalogo_nivel_instruccion")
  estudianteSituacionEconomica    Estudiantes[]           @relation(name: "catalogo_situacion_economica")
  matriculaEstadoMatricula        Matriculas[]            @relation(name: "catalogo_estado_matricula")
  matriculaEstadoCurso            Matriculas[]            @relation(name: "catalogo_estado_curso")
  formularioInscripcionPublicidad FormularioInscripcion[] @relation(name: "catalogo_publicidad")
  detalleAsistenciaEstado         DetalleAsistencia[]     @relation(name: "catalogo_estado_detalle_asistencia")
}

model Estudiantes {
  id                   Int      @id @default(autoincrement())
  cedula               String
  fechaNacimiento      DateTime
  nombres              String
  apellidos            String
  email                String   @unique
  discapacidad         Boolean  @default(false)
  detallesDiscapacidad String?
  direccion            String
  numeroCelular        String
  numeroConvencional   String
  clave                String
  rol                  Roles    @default(ESTUDIANTE)
  genero               Catalogo @relation(fields: [generoId], references: [id], name: "catalogo_genero")
  generoId             Int
  tipoEstudiante       Catalogo @relation(fields: [tipoEstudianteId], references: [id], name: "catalogo_tipo_estudiante")
  tipoEstudianteId     Int
  etnia                Catalogo @relation(fields: [etniaId], references: [id], name: "catalogo_etnia")
  etniaId              Int
  nivelInstruccion     Catalogo @relation(fields: [nivelInstruccionId], references: [id], name: "catalogo_nivel_instruccion")
  nivelInstruccionId   Int
  situacionEconomica   Catalogo @relation(fields: [situacionEconomicaId], references: [id], name: "catalogo_situacion_economica")
  situacionEconomicaId Int
}

model Matriculas {
  id                    Int                    @id @default(autoincrement())
  cursoId               Int
  nota1                 Decimal
  nota2                 Decimal
  promedio              Decimal
  porcentajeAsistencia  Decimal
  estadoMatricula       Catalogo               @relation(fields: [estadoMatriculaId], references: [id], name: "catalogo_estado_matricula")
  estadoMatriculaId     Int
  estadoCurso           Catalogo               @relation(fields: [estadoCursoId], references: [id], name: "catalogo_estado_curso")
  estadoCursoId         Int
  formularioInscripcion FormularioInscripcion?
  observaciones         Observaciones[]
  asistencias           Asistencia[]
}

model Observaciones {
  id           Int        @id @default(autoincrement())
  description  String
  completado   Boolean
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  matricula    Matriculas @relation(fields: [matriculaId], references: [id])
  matriculaId  Int
  asistencia   Asistencia @relation(fields: [asistenciaId], references: [id])
  asistenciaId Int
}

model FormularioInscripcion {
  id                  Int          @id @default(autoincrement())
  publicitado         Boolean
  contactoInstitucion String
  otrosCursos         String
  publicidad          Catalogo     @relation(fields: [publicidadId], references: [id], name: "catalogo_publicidad")
  publicidadId        Int
  documentos          Documentos[]
  matricula           Matriculas   @relation(fields: [matriculaId], references: [id])
  matriculaId         Int          @unique
}

model Documentos {
  id                      Int                   @id @default(autoincrement())
  nombre                  String
  urlArchivo              String
  fechaSubida             DateTime              @default(now())
  formularioInscripcion   FormularioInscripcion @relation(fields: [formularioInscripcionId], references: [id])
  formularioInscripcionId Int
}

model Asistencia {
  id                   Int             @id @default(autoincrement())
  periodo              String
  cursoId              Int
  evidenciaFotografica String
  duracionClase        String
  fecha                DateTime
  observaciones        Observaciones[]
  matriculas           Matriculas      @relation(fields: [matriculaId], references: [id])
  matriculaId          Int
}

model DetalleAsistencia {
  id                 Int      @id @default(autoincrement())
  estadoAsistencia   Catalogo @relation(fields: [estadoAsistenciaId], references: [id], name: "catalogo_estado_detalle_asistencia")
  estadoAsistenciaId Int
}

enum Roles {
  ESTUDIANTE
  ADMIN
}
